import Quicksort from "./Algorithms/QuickSort/QuickSort";
import { generateUniqueArray } from "./utils/generateArray";

function Benchmark<T extends Array<unknown>>(
	callback: (input: T) => T,
	input: T
) {
	const startTime = performance.now();
	callback(input);
	const endTime = performance.now();
	const totalTime = (endTime - startTime) / 1000;
	console.log(
		`${callback.name} ran for: ${totalTime.toFixed(5)} seconds, given: ${
			input.length
		} elements`
	);
}
const ten = [9, 3, 4, 1, 7, 5, 0, 2, 8, 6];

const oneHundred = [
	76, 79, 19, 9, 62, 7, 2, 83, 47, 18, 70, 35, 73, 30, 28, 22, 30, 47, 17, 81,
	61, 68, 51, 46, 30, 69, 84, 73, 53, 51, 3, 58, 40, 81, 92, 52, 93, 81, 87, 23,
	91, 48, 81, 64, 37, 93, 76, 29, 8, 49, 29, 87, 4, 9, 87, 16, 38, 81, 43, 76,
	50, 49, 79, 5, 85, 19, 15, 76, 12, 92, 33, 4, 63, 94, 84, 9, 52, 28, 49, 93,
	32, 8, 39, 41, 64, 15, 46, 44, 22, 50, 71, 48, 66, 80, 51, 29, 0, 48, 78, 30,
];
const oneThousand = [
	60, 19, 60, 83, 74, 18, 48, 54, 87, 86, 60, 63, 86, 79, 9, 81, 57, 63, 93, 38,
	44, 38, 36, 55, 33, 78, 3, 4, 52, 21, 33, 86, 34, 79, 21, 74, 32, 19, 79, 47,
	94, 12, 35, 59, 50, 10, 31, 2, 34, 79, 28, 46, 47, 88, 43, 89, 98, 46, 93, 14,
	9, 25, 12, 92, 51, 78, 13, 62, 36, 39, 6, 82, 14, 86, 72, 2, 65, 3, 2, 35, 8,
	28, 79, 18, 0, 76, 9, 72, 87, 26, 97, 82, 8, 47, 31, 44, 24, 44, 20, 67, 9,
	84, 38, 65, 76, 54, 73, 77, 5, 13, 20, 23, 65, 98, 15, 38, 41, 11, 30, 14, 46,
	83, 4, 34, 85, 68, 9, 15, 11, 61, 52, 55, 16, 16, 96, 36, 72, 26, 22, 96, 75,
	83, 37, 87, 4, 33, 84, 44, 43, 93, 45, 78, 0, 22, 55, 16, 42, 90, 11, 33, 61,
	78, 48, 26, 16, 14, 22, 58, 46, 62, 90, 37, 17, 58, 10, 80, 55, 45, 84, 23,
	90, 64, 56, 52, 59, 71, 19, 8, 69, 86, 4, 17, 100, 32, 6, 61, 67, 39, 91, 97,
	19, 37, 7, 25, 96, 27, 26, 7, 32, 37, 23, 19, 81, 34, 50, 30, 6, 75, 6, 63,
	98, 47, 34, 68, 28, 55, 11, 42, 65, 24, 4, 86, 49, 35, 17, 60, 18, 53, 52, 78,
	92, 99, 61, 99, 30, 100, 67, 97, 35, 23, 7, 87, 70, 70, 9, 85, 71, 96, 96, 95,
	85, 52, 19, 76, 71, 35, 65, 32, 0, 26, 97, 27, 51, 90, 26, 28, 20, 99, 57, 37,
	67, 17, 6, 99, 49, 62, 68, 21, 23, 81, 86, 85, 50, 73, 35, 74, 53, 71, 29, 56,
	57, 20, 86, 48, 70, 69, 82, 42, 26, 2, 84, 78, 95, 81, 81, 98, 54, 27, 94, 25,
	71, 62, 25, 24, 73, 6, 74, 17, 75, 78, 61, 91, 67, 3, 80, 38, 74, 64, 2, 100,
	71, 31, 13, 78, 99, 23, 39, 29, 58, 40, 7, 8, 46, 60, 12, 93, 84, 76, 92, 72,
	28, 74, 80, 59, 65, 83, 9, 52, 89, 76, 11, 76, 21, 72, 52, 55, 99, 62, 22, 88,
	47, 10, 77, 5, 91, 17, 82, 1, 76, 8, 72, 94, 38, 22, 99, 99, 15, 0, 36, 36, 2,
	63, 15, 17, 77, 81, 36, 94, 87, 61, 65, 38, 41, 47, 25, 4, 38, 33, 90, 87, 23,
	31, 88, 32, 0, 51, 66, 37, 77, 78, 3, 22, 5, 45, 100, 99, 34, 65, 79, 2, 31,
	3, 72, 36, 46, 17, 29, 73, 29, 15, 36, 63, 36, 56, 83, 53, 92, 50, 15, 10, 83,
	22, 94, 66, 96, 51, 97, 86, 79, 82, 30, 71, 68, 38, 19, 37, 70, 85, 65, 18,
	45, 99, 100, 28, 58, 81, 91, 32, 2, 10, 65, 74, 40, 54, 56, 14, 24, 99, 0, 54,
	17, 49, 17, 20, 69, 49, 65, 44, 90, 58, 2, 50, 31, 84, 68, 69, 47, 0, 56, 64,
	45, 45, 82, 20, 3, 89, 59, 42, 96, 30, 18, 47, 49, 56, 32, 69, 17, 22, 1, 82,
	80, 63, 55, 7, 5, 99, 79, 88, 11, 8, 7, 7, 22, 87, 72, 9, 99, 39, 62, 82, 44,
	62, 69, 76, 66, 41, 29, 86, 77, 17, 97, 49, 85, 15, 21, 89, 49, 46, 68, 21,
	100, 49, 53, 67, 82, 89, 18, 100, 59, 42, 22, 79, 57, 95, 99, 64, 51, 39, 16,
	94, 62, 80, 28, 49, 55, 75, 8, 12, 86, 16, 60, 55, 84, 82, 82, 67, 99, 17, 99,
	58, 99, 89, 40, 75, 95, 33, 48, 32, 41, 43, 47, 77, 4, 11, 68, 77, 93, 53, 40,
	63, 63, 67, 37, 69, 97, 91, 97, 53, 5, 48, 11, 27, 33, 79, 89, 41, 82, 75, 70,
	3, 44, 52, 65, 91, 76, 69, 3, 6, 96, 71, 15, 14, 19, 34, 88, 99, 19, 68, 1,
	14, 73, 39, 1, 66, 30, 90, 20, 66, 92, 54, 80, 43, 93, 19, 99, 51, 94, 47, 1,
	79, 33, 43, 100, 9, 44, 50, 0, 94, 72, 0, 22, 17, 46, 74, 56, 28, 42, 74, 51,
	5, 10, 95, 4, 22, 10, 56, 69, 18, 35, 5, 84, 39, 100, 94, 39, 23, 61, 56, 35,
	33, 22, 12, 31, 9, 92, 32, 95, 4, 23, 88, 3, 48, 35, 58, 12, 63, 97, 8, 43,
	35, 97, 59, 32, 82, 33, 19, 86, 55, 49, 52, 24, 90, 3, 17, 81, 100, 58, 70,
	94, 58, 27, 90, 9, 1, 86, 61, 1, 66, 79, 99, 43, 42, 70, 64, 89, 49, 58, 34,
	74, 55, 79, 59, 100, 55, 7, 42, 26, 84, 89, 18, 31, 95, 12, 53, 70, 75, 98,
	74, 44, 16, 56, 17, 46, 44, 83, 17, 46, 34, 52, 6, 91, 24, 10, 7, 58, 91, 60,
	84, 64, 27, 21, 52, 85, 18, 10, 23, 22, 45, 22, 47, 73, 89, 0, 77, 6, 56, 33,
	44, 46, 40, 3, 47, 77, 18, 42, 92, 22, 75, 6, 29, 12, 93, 89, 42, 97, 46, 76,
	85, 54, 7, 43, 3, 57, 61, 36, 11, 68, 41, 87, 56, 95, 20, 35, 53, 34, 55, 28,
	9, 85, 66, 19, 92, 53, 8, 93, 30, 74, 16, 70, 95, 75, 91, 21, 90, 63, 55, 58,
	80, 83, 8, 72, 54, 20, 57, 50, 9, 67, 11, 46, 96, 89, 42, 60, 6, 93, 94, 42,
	50, 32, 62, 45, 60, 29, 98, 84, 31, 93, 42, 17, 18, 60, 0, 67, 55, 77, 51, 5,
	0, 29, 26, 52, 87, 100, 28, 37, 82, 97, 58, 88, 62, 70, 48, 51, 56, 77, 82,
	61, 98, 12, 33, 99, 21, 0, 97, 66, 46, 6, 65, 46, 75, 43, 85, 75, 55, 100, 98,
	5, 83, 13, 89,
];

const tenThousand = generateUniqueArray(10000);
const hundredThousand = generateUniqueArray(100000);
const million = generateUniqueArray(1000000);
const tenMillion = generateUniqueArray(10000000);
const hundredMillion = generateUniqueArray(100000000);

Benchmark(Quicksort, ten);
Benchmark(Quicksort, oneHundred);
Benchmark(Quicksort, oneThousand);
Benchmark(Quicksort, tenThousand);
Benchmark(Quicksort, hundredThousand);
Benchmark(Quicksort, million);
Benchmark(Quicksort, tenMillion);
Benchmark(Quicksort, hundredMillion);
